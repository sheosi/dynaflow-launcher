name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


jobs:
  fedora:
    name: Linux Fedora (Release, GCC, cxx11)
    runs-on: ubuntu-latest
    container: dynawo/dynawo-ci:latest
    strategy:
      fail-fast: false
    env:
      DYNAFLOW_LAUNCHER_BUILD_TYPE: Release
      DYNAFLOW_LAUNCHER_PROCESSORS_USED: 2
      DYNAFLOW_LAUNCHER_FORCE_CXX11_ABI: "true"
      DYNAFLOW_LAUNCHER_LOCALE: "en_GB"
      COMPILER_FOLDER: "gcc5.3.1"
      VERSION: "1.3.0"
      GH_API: ${{ github.api_url }}/repos/${{ github.repository }}
      CURL_JSON: 'curl --silent --header "Content-Type": "application/json"'

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Fetch Dynawo and algorithms
        run: |
          download_asset() {
            ASSET_URL=$( \
              $CURL_JSON  -u "user: ${{ secrets.GITHUB_TOKEN }}"   \
              ${{ github.api_url }}/repos/$1/releases/tags/nightly | python3 -c \
              "import sys, json;l=[x for x in json.load(sys.stdin)['assets'] if x['name']=='$2'];print(str(l[0]['url']) if l else '')" \
            )
            
            if [ ! -z $ASSET_URL ]; then
              curl \
                --remote-header-name \
                --location \
                -H "Accept: application/octet-stream" \
                -u "user: ${{ secrets.GITHUB_TOKEN }}" \
                "$ASSET_URL" \
                --create-dirs \
                --limit-rate 2M \
                -o "$2"
            else
              echo "Asset not found $2 in $1"
              exit 1
            fi
          }
          
          download_asset dynawo/dynawo Dynawo_headers_V${VERSION}.zip
          download_asset sheosi/dynawo-algorithms Dynawo_algorithms_headers_V${VERSION}.zip
          
      - name: Extract Dynawo
        run: |
          # Does not need folder, one will be created by itself
          unzip -qq "Dynawo_headers_V${VERSION}.zip"
          cd ..
          
      - name: Extract Dynawo algorithms
        run: |
          unzip -qq "Dynawo_algorithms_headers_V${VERSION}.zip"
          cd ..

      - name: Build
        run: |
          export DYNAWO_HOME=$(pwd)/dynawo
          export DYNAWO_ALGORITHMS_HOME=$(pwd)/dynawo_algorithms
          export DYNAFLOW_LAUNCHER_HOME=$(pwd)
          scripts/envDFL.sh build-user

      - name: Run tests
        run: |
          export DYNAWO_HOME=$(pwd)/dynawo
          export DYNAWO_ALGORITHMS_HOME=$(pwd)/dynawo_algorithms
          export DYNAFLOW_LAUNCHER_HOME=$(pwd)
          scripts/envDFL.sh tests
